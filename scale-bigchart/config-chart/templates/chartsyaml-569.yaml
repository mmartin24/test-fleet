---
apiVersion: v1
kind: ConfigMap
metadata:
  name: foo-fluentd-aggregator-3
  labels:
    app: fluentd-aggregator
    chart: fluentd-aggregator-0.3.1
    release: foo
    heritage: Helm
data:
  forward-input.conf: |-
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>
  general.conf: |-
    # Prevent fluentd from handling records containing its own logs. Otherwise
    # it can lead to an infinite loop, when error in sending one message generates
    # another message which also fails to be sent and so on.
    <match fluentd.**>
      @type null
    </match>

    # Used for health checking
    <source>
      @type http
      port 9880
      bind 0.0.0.0
      body_size_limit 32m
      keepalive_timeout 10s
    </source>

    # Emits internal metrics to every minute, and also exposes them on port
    # 24220. Useful for determining if an output plugin is retryring/erroring,
    # or determining the buffer queue length.
    <source>
      @type monitor_agent
      bind 0.0.0.0
      port 24220
      tag fluentd.monitor.metrics
    </source>
  monitoring.conf: |-
    # expose metrics in prometheus format
    <source>
      @type prometheus
      bind 0.0.0.0
      port 24231
      metrics_path /metrics
    </source>
    <source>
      @type prometheus_output_monitor
      interval 10
      <labels>
        hostname ${hostname}
      </labels>
    </source>
    <source>
    @type prometheus_monitor
    </source>
  system.conf: |-
    <system>
      root_dir /tmp/fluentd-buffers/
    </system>
  output.conf: |-
    <match **>
      @type elasticsearch
      @log_level info
      include_tag_key true

      hosts "#{ENV['OUTPUT_ES_HOSTS']}"

      logstash_format true
      logstash_prefix "#{ENV['OUTPUT_ES_PREFIX']}"
      logstash_dateformat "#{ENV['OUTPUT_ES_DATEFORMAT']}"
      type_name "#{ENV['RELEASENAME']}"
      # fluentd file buffer config
      <buffer>
        @type file
        path /var/log/fluentd-buffers/*.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval "#{ENV['OUTPUT_BUFFER_FLUSH_INTERVAL']}"
        retry_forever
        retry_max_interval 30
        chunk_limit_size "#{ENV['OUTPUT_BUFFER_CHUNK_LIMIT']}"
        queue_limit_length "#{ENV['OUTPUT_BUFFER_QUEUE_LIMIT']}"
        overflow_action block
      </buffer>
    </match>
